- name: MySQL Deployment
  hosts: 192.168.200.101
  vars_files:
    - vars/deploy_vars.yaml
    
  tasks:
  - name: Install MySQL Package
    block:
    - name: Install mysql 
      apt:
        #update_cache: true
        name: python3-pymysql, mysql-server
        state: present
      when: ansible_facts['os_family'] == "Debian"
    - name: Install MariaDB Package
      yum:
        name: mariadb-server, mariadb-client
        state: present
      when: ansible_facts['os_family'] == "RedHat"
    - name: Starting MySQL Service
      service:
        name: mysql
        state: started
        enabled: yes
    
  - name: Create Wordpress Database
    mysql_db:
      login_unix_socket: "{{ mysql['socket'] }}"
      name: "{{ mysql['db'] }}"
      state: present
  - name: Create Wordpress User
    mysql_user:
      check_implicit_admin: yes
      login_unix_socket: "{{ mysql['socket'] }}"
      name: "{{ mysql['user'] }}"
      password: "{{ mysql['passwd'] }}"
      host: localhost
      priv: "{{ mysql['db'] }}.*:ALL,GRANT"
      state: present


  - name: Download Wordpress Source
    async: 300
    poll: 0
    register: wp_source_result
    get_url:
      url: "{{ wp['url'] }}"
      checksum: "{{ wp['sha1'] }}"
      dest: "{{ wp['source'] }}"
  - name: sync
    async_status:
      jid: "{{ wp_source_result.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 100
    delay: 5

  - name: Install Apache2 Package
    apt:
      name: apache2, php, php-mysql, php-gd, php-mbstring
      state: present
    when: ansible_facts['os_family'] == "Debian"
  - name: Install Httpd Package
    yum:
      name: httpd, php, php-mysql, php-gd, php-mbstring
      state: present
    when: ansible_facts['os_family'] == "RedHat"
  - name: Changing Apache Ports
    template:
      src: ports.conf
      dest: /etc/apache2/ports.conf
    notify:
    - Restart apache

  - name: Starting Apache2 Service
    service:
      name: apache2
      state: started
      enabled: yes

  - name: Unarchive Wordpress Source
    unarchive:
      src: "{{ wp['source'] }}"
      remote_src: true
      dest: /var/www/html

  - name: Set wordpress wp-config
    template:
      src: wp-config.php
      dest: /var/www/html/wordpress/wp-config.php
  - name: Check Web Service
    uri:
      url: http://192.168.200.101:8080/wordpress
      status_code: 200
    delegate_to: 192.168.200.100
  handlers:
    - name: Restart apache
      service:
        name: apache2
        state: restarted
#  - name: Setting Wordpress Database Configuration
#    copy:
#      src: /var/www/html/wordpress/wp-config-sample.php
#      dest: "{{ wp['config'] }}"
#      remote_src: yes
#  - name: Setting Configuration for DB Name
#      replace:
#      path: "{{ wp['config'] }}"
#     regexp: database_name_here
#     replace: "{{ mysql['db'] }}"
#  - name: Setting Configuration for User
#    replace:
#      path: "{{ wp['config'] }}"
#      regexp: username_here
#      replace: "{{ mysql['user'] }}"
#  - name: Setting Configuration for Password
#    replace:
#      path: "{{ wp['config'] }}"
#      regexp: password_here
#      replace: "{{ mysql['passwd'] }}"
